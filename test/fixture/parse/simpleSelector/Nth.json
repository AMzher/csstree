{
    "nthselector.0": {
        "source": ":nth-child(2n+1)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "2n"
                },
                {
                    "type": "Operator",
                    "value": "+"
                },
                {
                    "type": "Nth",
                    "value": "1"
                }
            ]
        }
    },
    "nthselector.0 case insensitive": {
        "source": ":nth-child(2N+1)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "2N"
                },
                {
                    "type": "Operator",
                    "value": "+"
                },
                {
                    "type": "Nth",
                    "value": "1"
                }
            ]
        }
    },
    "nthselector.1": {
        "source": ":nth-last-child(+3n-2)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-last-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "+3n"
                },
                {
                    "type": "Operator",
                    "value": "-"
                },
                {
                    "type": "Nth",
                    "value": "2"
                }
            ]
        }
    },
    "nth.0": {
        "source": ":nth-child(10)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "10"
                }
            ]
        }
    },
    "nth.1": {
        "source": ":nth-child(2n)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "2n"
                }
            ]
        }
    },
    "nth.2": {
        "source": ":nth-child(odd)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "odd"
                }
            ]
        }
    },
    "nth.3": {
        "source": ":nth-child(even)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "even"
                }
            ]
        }
    },
    "nth.4": {
        "source": ":nth-child(n)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "n"
                }
            ]
        }
    },
    "nthselector.c.0": {
        "source": ":nth-child(/*test*/2n/*test*/+/*test*/1/*test*/)",
        "translate": ":nth-child(2n+1)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "2n"
                },
                {
                    "type": "Operator",
                    "value": "+"
                },
                {
                    "type": "Nth",
                    "value": "1"
                }
            ]
        }
    },
    "nthselector.c.1": {
        "source": ":nth-last-child(/*test*/+3n/*test*/-/*test*/2/*test*/)",
        "translate": ":nth-last-child(+3n-2)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-last-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "+3n"
                },
                {
                    "type": "Operator",
                    "value": "-"
                },
                {
                    "type": "Nth",
                    "value": "2"
                }
            ]
        }
    },
    "nthselector.s.0": {
        "source": ":nth-child(  2n  +  1  )",
        "translate": ":nth-child(2n+1)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "2n"
                },
                {
                    "type": "Operator",
                    "value": "+"
                },
                {
                    "type": "Nth",
                    "value": "1"
                }
            ]
        }
    },
    "nthselector.s.1": {
        "source": ":nth-last-child(  +3n  -  2  )",
        "translate": ":nth-last-child(+3n-2)",
        "ast": {
            "type": "FunctionalPseudo",
            "name": "nth-last-child",
            "sequence": [
                {
                    "type": "Nth",
                    "value": "+3n"
                },
                {
                    "type": "Operator",
                    "value": "-"
                },
                {
                    "type": "Nth",
                    "value": "2"
                }
            ]
        }
    },
    "error #1": {
        "source": ":nth-child(xxx)",
        "offset": "           ^",
        "error": "Unexpected input"
    },
    "error #2": {
        "source": ":nth-child(--test) {}",
        "offset": "            ^",
        "error": "Number or identifier is expected"
    },
    "error #3": {
        "source": ":nth-child(var(--test)) {}",
        "offset": "           ^",
        "error": "Unexpected input"
    },
    "error #4": {
        "source": ":nth-child(3 n)",
        "offset": "             ^",
        "error": "RightParenthesis is expected"
    },
    "error #5": {
        "source": ":nth-child(+ 2n)",
        "offset": "            ^",
        "error": "Number or identifier is expected"
    },
    "error #6": {
        "source": ":nth-child(+ 2)",
        "offset": "            ^",
        "error": "Number or identifier is expected"
    },
    "error #7": {
        "source": ":nth-child(3n - +1)",
        "offset": "                ^",
        "error": "Unexpected input"
    },
    "error #8": {
        "source": ":nth-child(3n - -1)",
        "offset": "                ^",
        "error": "Unexpected input"
    },
    "error #9": {
        "source": ":nth-child(3n- +1)",
        "offset": "               ^",
        "error": "Unexpected input"
    },
    "error #10": {
        "source": ":nth-child(3n- -1)",
        "offset": "               ^",
        "error": "Unexpected input"
    },
    "error #11": {
        "source": ":nth-child(3n-2n)",
        "offset": "               ^",
        "error": "Unexpected input"
    },
    "error #12": {
        "source": ":nth-child(3n + -6)",
        "offset": "                ^",
        "error": "Unexpected input"
    },
    "error #13": {
        "source": ":nth-child(3n - 2n)",
        "offset": "                 ^",
        "error": "RightParenthesis is expected"
    },
    "error #14": {
        "source": ":nth-child(3n- 2n)",
        "offset": "                ^",
        "error": "RightParenthesis is expected"
    },
    "error #15": {
        "source": ":nth-child(3n-x)",
        "offset": "              ^",
        "error": "Unexpected input"
    },
    "error #16": {
        "source": ":nth-child(3n 1)",
        "offset": "              ^",
        "error": "Unexpected input"
    },
    "error #17": {
        "source": ":nth-child(3nn)",
        "offset": "             ^",
        "error": "Unexpected input"
    },
    "error #18": {
        "source": ":nth-child(3n- n)",
        "offset": "               ^",
        "error": "Unexpected input"
    }
}
